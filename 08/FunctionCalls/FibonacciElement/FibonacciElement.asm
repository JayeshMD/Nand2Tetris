//function Sys.init 0
(Sys.init)
@SP
D=M
@LCL
M=D
@0
D=A
@SP
A=M
D=A
@SP
M=D
//push constant 4
@4
D=A
@SP
AM=M+1
A=A-1
M=D
//call Main.fibonacci 1   
@SP
D=M
@1
D=D-A
@R13
M=D
@Main.fibonacci_return_0
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@R13
D=M
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci_return_0)
//label WHILE
(WHILE)
//goto WHILE              
@WHILE
0; JMP
//function Main.fibonacci 0
(Main.fibonacci)
@SP
D=M
@LCL
M=D
@0
D=A
@SP
A=M
D=A
@SP
M=D
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
//lt                     
@SP
AM=M-1
D=M
A=A-1
D=M-D
@lab_0
D;JLT
D=0
@lab_1
0;JMP
(lab_0)
D=-1
(lab_1)
@SP
A=M-1
M=D
//if-goto IF_TRUE
@SP
AM=M-1
D=M
@IF_TRUE
D; JNE
//goto IF_FALSE
@IF_FALSE
0; JMP
//label IF_TRUE          
(IF_TRUE)
//push argument 0        
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//return
@LCL
D=M
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@LCL
D=M
@R13
AM=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
//label IF_FALSE         
(IF_FALSE)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//call Main.fibonacci 1  
@SP
D=M
@1
D=D-A
@R13
M=D
@Main.fibonacci_return_1
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@R13
D=M
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci_return_1)
//push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 1
@1
D=A
@SP
AM=M+1
A=A-1
M=D
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//call Main.fibonacci 1  
@SP
D=M
@1
D=D-A
@R13
M=D
@Main.fibonacci_return_2
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@R13
D=M
@ARG
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci_return_2)
//add                    
@SP
AM=M-1
D=M
A=A-1
M=M+D
//return
@LCL
D=M
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@LCL
D=M
@R13
AM=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
