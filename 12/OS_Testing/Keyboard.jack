// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static char new_line, backspace, left_arrow, up_arrow, right_arrow, down_arrow;
    static char home, End, page_up, page_down, insert, delete, ESC, minus_sign;
    static Array F_keys;
    static int mem_keyboard;

    /** Initializes the keyboard. */
    function void init() {
        var int i;
        
        let minus_sign = 45;
        let new_line = 128;
        let backspace = 129;
        let left_arrow = 130;
        let up_arrow = 131;
        let right_arrow = 132;
        let down_arrow = 133;
        let home = 134;
        let End = 135;
        let page_up = 136;
        let page_down = 137;
        let insert = 138;
        let delete = 139;
        let ESC = 140;
        let mem_keyboard = 24576;
        let F_keys = Array.new(12);
        
        while(i<12){
            // F1 is in F_keys[0] - F12 is in F_keys[11]
            let F_keys[i] = 141+i;   
            let i = i +1; 
        }
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(mem_keyboard);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char c, cursor;
        var int i;
        let c = 0;
        let cursor = 95;
        while(c=0){
            let i = 0;
            do Output.printChar(cursor);
            while((i<1000)&(c=0)){
                let c = Keyboard.keyPressed();
                let i = i+1;
            }
            do Output.backSpace();
            let i = 0;
            while((i<1000)&(c=0)){
                let c = Keyboard.keyPressed();
                let i = i+1;
            }
        }
        while(Keyboard.keyPressed()>0){}
        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String s;
        var char c;

        let s = String.new(250);

        do Output.printString(message);
        while(true){
            let c = Keyboard.readChar();
            
            if(c=new_line){
                do Output.println();
                return s;
            }
            else{
                if(c=backspace){
                    do s.eraseLastChar();
                    do Output.backSpace();
                }
                else{
                    do Output.printChar(c);
                    do s.appendChar(c);
                }
            }
        
        }
        return s;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String s;
        var char c;
        var int n;
        var boolean neg_flag;
        let neg_flag = false;
        let s = String.new(250);
        let n = 0;

        do Output.printString(message);
        while(true){
            let c = Keyboard.readChar();
            if((c>47)&(c<58) | (c=new_line) | (c=backspace))
            {   
                if(c=new_line){
                    do Output.println();
                    if(neg_flag){let n = -n;}
                    return n;
                }
                else{
                    if(c=backspace){
                        do s.eraseLastChar();
                        do Output.backSpace();
                        let n = (n/10); 
                    }
                    else{
                        do Output.printChar(c);
                        do s.appendChar(c);
                        let n = (n*10)+ (c-48);  // '0' = char 48,..., '9' = char 57
                    }
                }
            }
            else{
                if((c=minus_sign) & (n=0)){
                    do Output.printChar(c);
                    let neg_flag = true;
                }
            }

        }
        
        return n;
    }
}
